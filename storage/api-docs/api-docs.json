{
    "openapi": "3.0.0",
    "info": {
        "title": "Content Scheduler API",
        "description": "API documentation for the Content Scheduler application",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "6703d7156c265a1e7b47e500d2a16304",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "johndoe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "your-jwt-token-here"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "operationId": "a5385ffca73f113abef00ea604d1ca58",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "johndoe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "your-jwt-token-here"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid email or password"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "0f6715df0d22b69c7e35bd32b4c1fc92",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/platforms": {
            "get": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Get all platforms with user's active status",
                "operationId": "caf905e7ed08db934a97ce99cab2ca17",
                "responses": {
                    "200": {
                        "description": "Platforms retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Facebook"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "social"
                                            },
                                            "active": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/platforms/toggle": {
            "post": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Toggle a platform's active status for the authenticated user",
                "operationId": "bd679922235fa15c22662c03595ba7a9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlatformToggleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Platform toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "platform_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Failed to toggle platform"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all posts of the authenticated user",
                "operationId": "e9eaf7df702a94f4443677bd1a36cfe6",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by post status (scheduled, published, failed, all)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter by scheduled date (Y-m-d format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "4a657e51a0066c64781851f2fd2651e2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully"
                    },
                    "429": {
                        "description": "Daily post limit reached"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a single post by ID",
                "operationId": "b0f9d92879218f68a376b6edc6467c67",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "operationId": "929614537d76a081a92170a41ed3bdb3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully"
                    },
                    "403": {
                        "description": "Unauthorized to update this post"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "fad1726bd24cd459fc1525b67985df39",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully"
                    },
                    "403": {
                        "description": "Cannot delete a published post or unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/analytics": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get post analytics for the authenticated user",
                "operationId": "c2d62ce5b4ae5f1bcb4a3bb0b3a47b64",
                "responses": {
                    "200": {
                        "description": "Analytics data retrieved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/analytics/export": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Export post analytics to CSV",
                "operationId": "d2b43b45aff79e9eafef107163b7795a",
                "responses": {
                    "200": {
                        "description": "CSV export successful",
                        "content": {
                            "text/csv": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get authenticated user profile",
                "operationId": "ede45b19680d6fb1319013a741a05734",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "securePassword123"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "example": "securePassword123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "minLength": 8,
                        "example": "securePassword123"
                    }
                },
                "type": "object"
            },
            "CreatePostRequest": {
                "required": [
                    "title",
                    "content",
                    "platforms"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "My scheduled post"
                    },
                    "content": {
                        "type": "string",
                        "example": "This is the post content."
                    },
                    "scheduled_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T10:00:00Z",
                        "nullable": true
                    },
                    "platforms": {
                        "description": "Array of platform IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    "image": {
                        "description": "Optional image file (max 2MB)",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PlatformToggleRequest": {
                "required": [
                    "platform_id",
                    "active"
                ],
                "properties": {
                    "platform_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "UpdatePostRequest": {
                "required": [
                    "title",
                    "content",
                    "platforms"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Updated Post Title"
                    },
                    "content": {
                        "type": "string",
                        "example": "Updated content of the post."
                    },
                    "scheduled_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-02T12:00:00Z",
                        "nullable": true
                    },
                    "platforms": {
                        "description": "Updated array of platform IDs",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    "image": {
                        "description": "Optional updated image file (max 2MB)",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Platforms",
            "description": "Platforms"
        },
        {
            "name": "Posts",
            "description": "Posts"
        },
        {
            "name": "Analytics",
            "description": "Analytics"
        },
        {
            "name": "Profile",
            "description": "Profile"
        }
    ]
}